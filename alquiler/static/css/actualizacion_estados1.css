

.contenedor-actualizacion {
    max-width: 1200px;
    margin: 20px auto;
    padding: 20px;
    background: var(--card-background); /* Usa la variable de fondo de tarjeta para adaptarse al modo oscuro */
    border-radius: 8px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
}

.header-acciones {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 20px;
    flex-wrap: wrap;
    gap: 15px;
}

.btn-volver {
    display: inline-flex;
    align-items: center;
    gap: 8px;
    padding: 8px 15px;
    background-color: var(--primary-color); /* Usa la variable global */
    color: white; /* Blanco para asegurar visibilidad en fondo oscuro primary-color */
    border-radius: 4px;
    text-decoration: none;
    transition: all 0.3s;
}

.btn-volver:hover {
    background-color: var(--highlight-color); /* Usa la variable global de highlight para el hover */
    transform: translateY(-2px);
}

.acciones-rapidas {
    display: flex;
    gap: 10px;
}

.btn-accion {
    display: flex;
    align-items: center;
    gap: 8px;
    padding: 8px 15px;
    background-color: var(--card-background); /* Usa la variable global */
    border: 1px solid var(--border-color); /* Usa la variable global */
    color: var(--text-color); /* Asegura que el texto del botón cambie */
    border-radius: 4px;
    cursor: pointer;
    transition: all 0.3s;
}

.btn-accion:hover {
    /* Aquí puedes usar rgba de tu primary-color, o una variable de color de hover.
       Se recomienda usar --secondary-color o definir un --button-hover-background en base.css */
    background-color: var(--secondary-color);
}

.filtros-rapidos {
    display: flex;
    flex-wrap: wrap;
    gap: 15px;
    margin-bottom: 20px;
    align-items: center;
}

.input-filtro {
    flex: 1;
    min-width: 250px;
    padding: 10px 15px;
    border: 1px solid var(--border-color); /* Usa la variable global */
    border-radius: 4px;
    font-size: 1rem;
    color: var(--text-color); /* Color de texto para inputs */
}

.input-filtro::placeholder { /* Para el placeholder del input */
    color: var(--text-secondary);
}

.controles-estado {
    display: flex;
    gap: 10px;
    align-items: center;
}

.select-estado {
    padding: 10px 15px;
    border: 1px solid var(--border-color); /* Usa la variable global */
    border-radius: 4px;
    font-size: 1rem;
    min-width: 200px;
    color: var(--text-color); /* Color de texto para selects */
}

.btn-actualizar {
    padding: 10px 20px;
    background-color: var(--success-color); /* Usa la variable global */
    color: white; /* Blanco se mantiene si el contraste es bueno en ambos modos */
    border: none;
    border-radius: 4px;
    cursor: pointer;
    font-size: 1rem;
    display: flex;
    align-items: center;
    gap: 8px;
    transition: all 0.3s;
}

.btn-actualizar:hover {
    background-color: var(--highlight-color); /* Usa la variable global de highlight para el hover */
}

.tabla-container {
    overflow-x: auto;
    margin-top: 20px;
}

.tabla-equipos {
    width: 100%;
    border-collapse: collapse;
    font-size: 0.95rem;
    background: transparent;
}

.tabla-equipos th,
.tabla-equipos td {
    padding: 12px 15px;
    text-align: left;
    border-bottom: 1px solid var(--border-color); /* Usa la variable global */
    color: var(--text-color); /* Asegura que el texto de la tabla cambie */
}

.tabla-equipos th {
    background-color: var(--primary-color); /* Usa la variable global para el fondo */
    color: white; /* El texto del encabezado de tabla debe ser blanco en fondo oscuro */
    font-weight: 500;
}

.tabla-equipos tr:hover {
    /* Aquí puedes usar rgba de tu primary-color o una nueva variable para el hover de tabla */
    background-color: var(--secondary-color); /* O una nueva variable como --table-hover-background */
}

.check-equipo {
    transform: scale(1.3);
    cursor: pointer;
}

.badge-estado {
    display: inline-block;
    padding: 4px 10px;
    border-radius: 12px;
    font-size: 0.85rem;
    font-weight: 500;
    color: white; /* Si el blanco funciona bien en ambos modos, déjalo */
}

.estado-disponible {
    background-color: var(--success-color); /* Usa la variable global */
}

.estado-alquilado {
    background-color: var(--error-color); /* Usa la variable global */
}

.estado-reservado {
    background-color: var(--warning-color); /* Usa la variable global */
}

.estado-mantenimiento {
    background-color: var(--info-color); /* Usa la variable global */
}

.badge-disponibilidad {
    display: inline-block;
    padding: 4px 10px;
    border-radius: 12px;
    font-size: 0.85rem;
    font-weight: 500;
}

.badge-disponibilidad.disponible {
    /* IMPORTANTE: Si base.css define --success-color-rgb (ej: 46, 204, 113), úsalo aquí.
       De lo contrario, estos rgba seguirán siendo fijos. */
    background-color: rgba(46, 204, 113, 0.2);
    color: var(--success-color);
}

.badge-disponibilidad.no-disponible {
    /* IMPORTANTE: Si base.css define --error-color-rgb (ej: 231, 76, 60), úsalo aquí. */
    background-color: rgba(231, 76, 60, 0.2);
    color: var(--error-color);
}

/* Estilos para los badges de alquiler (AÑADIDOS/CORREGIDOS) */
.badge-alquiler {
    display: inline-block;
    padding: 4px 10px;
    border-radius: 12px;
    font-size: 0.85rem;
    font-weight: 500;
    color: white; /* Asume que los fondos serán oscuros para estos badges */
}

.badge-alquiler.activo {
    background-color: var(--error-color); /* Un color de advertencia o error para indicar que está alquilado */
}

.badge-alquiler.inactivo {
    background-color: var(--success-color); /* Un color de éxito o info para indicar que está libre */
}


.sin-equipos {
    text-align: center;
    padding: 20px;
    color: var(--text-secondary); /* Usa un color de texto secundario para esto */
    opacity: 0.7;
}

/* Estilos para checkboxes personalizados */
input[type="checkbox"] {
    position: relative;
    appearance: none;
    width: 20px;
    height: 20px;
    border: 2px solid var(--border-color); /* Usa la variable global */
    border-radius: 4px;
    outline: none;
    cursor: pointer;
    transition: all 0.3s;
}

input[type="checkbox"]:checked {
    background-color: var(--primary-color); /* Usa la variable global */
    border-color: var(--primary-color); /* Usa la variable global */
}

input[type="checkbox"]:checked::after {
    content: "✓";
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: white; /* El blanco suele funcionar para el checkmark */
    font-size: 12px;
}

/* Responsive */
@media (max-width: 768px) {
    /* ---------------------------------------------------- */
    /* Ajustes para el header, para que se apilen correctamente */
    /* ---------------------------------------------------- */
    .header-acciones {
        flex-direction: column; /* Apila los elementos verticalmente */
        align-items: stretch; /* Hace que los elementos ocupen todo el ancho */
        gap: 15px;
    }

    .btn-volver {
        width: 100%; /* El botón "Volver" ocupa todo el ancho */
        justify-content: center;
    }
    
    .acciones-rapidas {
        width: 100%; /* El contenedor de botones rápidos ocupa todo el ancho */
        /* Cambiamos a 'space-around' o 'space-between' para mejor distribución */
        justify-content: space-between; 
        gap: 5px; /* Reducimos el espacio entre los botones para evitar que se aplasten */
    }

    .btn-accion {
        flex-grow: 1; /* Permite que los botones crezcan para llenar el espacio */
        justify-content: center;
        text-align: center;
        /* Reducimos el padding para que el texto encaje mejor */
        padding: 8px 10px;
        font-size: 0.9rem;
    }

    /* ---------------------------------------------------- */
    /* Ajustes para la sección de filtros */
    /* ---------------------------------------------------- */
    .filtros-rapidos {
        flex-direction: column;
        align-items: stretch;
        gap: 10px; /* Reducimos el gap para que el espacio se use mejor */
    }
    
    .input-filtro,
    .select-estado {
        width: 100%; /* Ahora ocupan el 100% del ancho */
        min-width: unset; /* Reiniciamos el min-width */
    }
    
    .controles-estado {
        flex-direction: column; /* Apilamos el select y el botón de actualizar */
        width: 100%; 
        justify-content: space-between;
        gap: 10px;
    }
    
    .btn-actualizar {
        width: 100%;
        justify-content: center;
    }

    /* ---------------------------------------------------- */
    /* Ajustes para la tabla */
    /* ---------------------------------------------------- */
    .tabla-equipos {
        font-size: 0.85rem; /* Reducimos el tamaño de la fuente para que el texto quepa */
    }
    
    .tabla-equipos th,
    .tabla-equipos td {
        padding: 8px 10px; /* Reducimos el padding de las celdas */
    }
}